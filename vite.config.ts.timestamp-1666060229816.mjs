// vite.config.ts
import { defineConfig } from "vite";
import vue from "@vitejs/plugin-vue";
import { join, parse, resolve } from "path";
import { exit } from "process";
import child_process from "child_process";
var __vite_injected_original_dirname = "/Users/vm/Documents/Function/seer.eco-vite";
var root = resolve(__vite_injected_original_dirname, "");
var a = new Date();
var b = `${a.getFullYear()}.${a.getMonth()}.${a.getDate()}-${a.getHours()}_${a.getMinutes()}`;
var outDir = resolve(`/Users/vm/Downloads/seer.eco_${b}`);
child_process.exec('open "/Users/vm/Downloads/"');
exit();
var publicP = resolve(__vite_injected_original_dirname, "public");
console.log(root);
var vite_config_default = defineConfig({
  plugins: [
    vue({
      template: {
        transformAssetUrls: {
          includeAbsolute: false
        }
      }
    })
  ],
  base: "/",
  build: {
    outDir,
    emptyOutDir: true
  },
  publicDir: "./public",
  server: {
    watch: {
      usePolling: true
    }
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCIvVXNlcnMvdm0vRG9jdW1lbnRzL0Z1bmN0aW9uL3NlZXIuZWNvLXZpdGVcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIi9Vc2Vycy92bS9Eb2N1bWVudHMvRnVuY3Rpb24vc2Vlci5lY28tdml0ZS92aXRlLmNvbmZpZy50c1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vVXNlcnMvdm0vRG9jdW1lbnRzL0Z1bmN0aW9uL3NlZXIuZWNvLXZpdGUvdml0ZS5jb25maWcudHNcIjtpbXBvcnQgeyBmaWxlVVJMVG9QYXRoLCBVUkwgfSBmcm9tICd1cmwnXG5pbXBvcnQgeyBkZWZpbmVDb25maWcgfSBmcm9tICd2aXRlJ1xuaW1wb3J0IHZ1ZSBmcm9tICdAdml0ZWpzL3BsdWdpbi12dWUnXG5pbXBvcnQgeyBqb2luLCBwYXJzZSwgcmVzb2x2ZSwgZGlybmFtZSB9IGZyb20gJ3BhdGgnXG5pbXBvcnQgeyBleGl0IH0gZnJvbSAncHJvY2VzcydcbmltcG9ydCBjaGlsZF9wcm9jZXNzIGZyb20gJ2NoaWxkX3Byb2Nlc3MnXG5jb25zdCByb290ID0gcmVzb2x2ZShfX2Rpcm5hbWUsICcnKVxuY29uc3QgYSA9IG5ldyBEYXRlKClcbmNvbnN0IGIgPSBgJHthLmdldEZ1bGxZZWFyKCl9LiR7YS5nZXRNb250aCgpfS4ke2EuZ2V0RGF0ZSgpfS0ke2EuZ2V0SG91cnMoKX1fJHthLmdldE1pbnV0ZXMoKX1gXG5jb25zdCBvdXREaXIgPSByZXNvbHZlKGAvVXNlcnMvdm0vRG93bmxvYWRzL3NlZXIuZWNvXyR7Yn1gKVxuY2hpbGRfcHJvY2Vzcy5leGVjKCdvcGVuIFwiL1VzZXJzL3ZtL0Rvd25sb2Fkcy9cIicpXG5leGl0KClcbmNvbnN0IHB1YmxpY1AgPSByZXNvbHZlKF9fZGlybmFtZSwgJ3B1YmxpYycpXG5cbmNvbnNvbGUubG9nKHJvb3QpXG4vLyBodHRwczovL3ZpdGVqcy5kZXYvY29uZmlnL1xuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKHtcblx0cGx1Z2luczogW1xuXHRcdHZ1ZSh7XG5cdFx0XHR0ZW1wbGF0ZToge1xuXHRcdFx0XHR0cmFuc2Zvcm1Bc3NldFVybHM6IHtcblx0XHRcdFx0XHRpbmNsdWRlQWJzb2x1dGU6IGZhbHNlLFxuXHRcdFx0XHR9LFxuXHRcdFx0fSxcblx0XHR9KSxcblx0XSxcblx0Ly8gcm9vdDogJy4vc3JjJyxcblx0YmFzZTogJy8nLFxuXHQvLyByb290LFxuXHRidWlsZDoge1xuXHRcdG91dERpcixcblx0XHRlbXB0eU91dERpcjogdHJ1ZSxcblx0XHQvLyByb2xsdXBPcHRpb25zOiB7XG5cdFx0Ly8gXHRpbnB1dDoge1xuXHRcdC8vIFx0XHQnaW5kZXguaHRtbCc6IHJlc29sdmUoX19kaXJuYW1lLCAnaW5kZXguaHRtbCcpLFxuXHRcdC8vIFx0XHQnL3BhZ2UyL2luZGV4Lmh0bWwnOiByZXNvbHZlKF9fZGlybmFtZSwgJ3NyYy9wYWdlMi9pbmRleC5odG1sJyksXG5cdFx0Ly8gXHRcdCdwYWdlMi9wYWdlMy5odG1sJzogcmVzb2x2ZShfX2Rpcm5hbWUsICdwYWdlMi9wYWdlMy5odG1sJyksXG5cdFx0Ly8gXHR9LFxuXHRcdC8vIFx0b3V0cHV0OiB7XG5cdFx0Ly8gXHRcdCdpbmRleC5odG1sJzogJ2luZGV4Lmh0bWwnLFxuXHRcdC8vIFx0XHQncGFnZTIvaW5kZXguaHRtbCc6ICdwYWdlMi9pbmRleC5odG1sJyxcblx0XHQvLyBcdFx0J3BhZ2UyL3BhZ2UzLmh0bWwnOiAncGFnZTIvcGFnZTMuaHRtbCcsXG5cdFx0Ly8gXHR9LFxuXHRcdC8vIH0sXG5cdH0sXG5cdHB1YmxpY0RpcjogJy4vcHVibGljJyxcblx0c2VydmVyOiB7XG5cdFx0d2F0Y2g6IHtcblx0XHRcdHVzZVBvbGxpbmc6IHRydWUsXG5cdFx0fSxcblx0fSxcbn0pXG5cbmZ1bmN0aW9uIGVudHJ5UG9pbnRzKC4uLnBhdGhzKSB7XG5cdGNvbnN0IGVudHJpZXMgPSBwYXRocy5tYXAocGFyc2UpLm1hcCgoZW50cnkpID0+IHtcblx0XHRjb25zdCB7IGRpciwgYmFzZSwgbmFtZSwgZXh0IH0gPSBlbnRyeVxuXHRcdGNvbnN0IGtleSA9IGpvaW4oZGlyLCBuYW1lKVxuXHRcdGNvbnN0IHBhdGggPSByZXNvbHZlKHJvb3QsIGRpciwgYmFzZSlcblx0XHRjb25zb2xlLmxvZygnZW50cnlQb2ludHMnLCBlbnRyeSwga2V5LCBwYXRoKVxuXHRcdHJldHVybiBba2V5LCBwYXRoXVxuXHR9KVxuXG5cdGNvbnN0IGNvbmZpZyA9IE9iamVjdC5mcm9tRW50cmllcyhlbnRyaWVzKVxuXHRyZXR1cm4gY29uZmlnXG59XG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQ0EsU0FBUyxvQkFBb0I7QUFDN0IsT0FBTyxTQUFTO0FBQ2hCLFNBQVMsTUFBTSxPQUFPLGVBQXdCO0FBQzlDLFNBQVMsWUFBWTtBQUNyQixPQUFPLG1CQUFtQjtBQUwxQixJQUFNLG1DQUFtQztBQU16QyxJQUFNLE9BQU8sUUFBUSxrQ0FBVyxFQUFFO0FBQ2xDLElBQU0sSUFBSSxJQUFJLEtBQUs7QUFDbkIsSUFBTSxJQUFJLEdBQUcsRUFBRSxZQUFZLEtBQUssRUFBRSxTQUFTLEtBQUssRUFBRSxRQUFRLEtBQUssRUFBRSxTQUFTLEtBQUssRUFBRSxXQUFXO0FBQzVGLElBQU0sU0FBUyxRQUFRLGdDQUFnQyxHQUFHO0FBQzFELGNBQWMsS0FBSyw2QkFBNkI7QUFDaEQsS0FBSztBQUNMLElBQU0sVUFBVSxRQUFRLGtDQUFXLFFBQVE7QUFFM0MsUUFBUSxJQUFJLElBQUk7QUFFaEIsSUFBTyxzQkFBUSxhQUFhO0FBQUEsRUFDM0IsU0FBUztBQUFBLElBQ1IsSUFBSTtBQUFBLE1BQ0gsVUFBVTtBQUFBLFFBQ1Qsb0JBQW9CO0FBQUEsVUFDbkIsaUJBQWlCO0FBQUEsUUFDbEI7QUFBQSxNQUNEO0FBQUEsSUFDRCxDQUFDO0FBQUEsRUFDRjtBQUFBLEVBRUEsTUFBTTtBQUFBLEVBRU4sT0FBTztBQUFBLElBQ047QUFBQSxJQUNBLGFBQWE7QUFBQSxFQWFkO0FBQUEsRUFDQSxXQUFXO0FBQUEsRUFDWCxRQUFRO0FBQUEsSUFDUCxPQUFPO0FBQUEsTUFDTixZQUFZO0FBQUEsSUFDYjtBQUFBLEVBQ0Q7QUFDRCxDQUFDOyIsCiAgIm5hbWVzIjogW10KfQo=
